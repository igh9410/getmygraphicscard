server:
  port: 0
  ## ${random.int(5001,5010)}
rsa:
  private-key: classpath:certs/private.pem
  public-key: classpath:certs/public.pem
spring:
  application:
    name: subscription-service
  profiles:
    include: oauth
  datasource:
    url: jdbc:mysql://localhost:3306/subscription_service
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: igh9410
    password: Rjsgur94!
  jpa:
    hibernate:
      ddl-auto: update
  ## Kafka Configuration
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      properties:
        spring.json.trusted.packages: "*"
  ## Redis Configuration
  data:
    redis:
      database: 0
      host: localhost
      port: 6379

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8070/eureka
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
logging:
  level:
    org:
      hibernate:
        SQL: DEBUG
        type:
          descriptor:
            sql:
              BasicBinder: TRACE
      springframework:
        security: TRACE
springdoc:
  api-docs:
    path: /api-docs
  show-actuator: true

management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
    health:
      show-details: always

resilience4j.circuitbreaker:
  instances:
    productService:
      registerHealthIndicator: true
      ringBufferSizeInClosedState: 5
      ringBufferSizeInHalfOpenState: 3
      waitDurationInOpenState: 10s
      failureRateThreshold: 50

