server:
  port: 8888
spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      globalcors:
        default-filters:
          - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
        add-to-simple-url-handler-mapping: true
        cors-configurations:
          '[/**]':
            allowedOrigins: "http://localhost:3000"
            allow-credentials: true
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - PATCH
              - OPTIONS
            allowedHeaders:
              - "*"
      forwarded:
        enabled: true
        headers: Access-Control-Request-Method,Access-Control-Request-Headers
      routes:
        ## Eureka Server Route
        - id: eureka-server
          uri: http://localhost:8070
          predicates:
            - Path=/eureka
          filters:
            - SetPath=/
        ## Eureka Static Resources Route
        - id: eureka-server-static
          uri: http://localhost:8070
          predicates:
            - Path=/eureka/**
        ## Identity Service Route
        - id: identity-service
          uri: lb://identity-service
          filters:
              - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
          predicates:
            - Path=/api/auth/**, /identity/**, /docs/**
        ## Product Service Route
        - id: product-service
          uri: lb://product-service
          predicates:
            - Path=/api/items, /api/items/**, /product/**, /docs/**
        ## Subscription Service Route
        - id: subscription-service
          uri: lb://subscription-service
          predicates:
            - Path=/api/subscriptions, /api/subscriptions/**, /subscription/**, /docs/**



# ...

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8070/eureka
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${server.port}}


logging:
  level:
    org:
      springframework:
        cloud:
          gateway:
            nodeValue: TRACE
            route:
              RouteDefinitionLocator: INFO
        security: DEBUG










